# version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "${ELASTIC_PORT:-9200}:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    mem_limit: 3GB
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep green || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  ollama:
    image: ollama/ollama
    container_name: ollama
    volumes:
      - ollama_data:/root/.ollama
      - ./run_ollama.sh:/run_ollama.sh
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    mem_limit: 10GB
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:11434 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    tty: true
    restart: always
    entrypoint: ["/usr/bin/bash", "/run_ollama.sh"]    

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamlit
    environment:
      - ELASTIC_URL=http://elasticsearch:${ELASTIC_PORT:-9200}
      - OLLAMA_URL=http://ollama:${OLLAMA_PORT:-11434}/v1/
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MODEL_NAME=${MODEL_NAME}
      - INDEX_NAME=${INDEX_NAME}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "${STREAMLIT_PORT:-8501}:8501"
    volumes:
      - ./data:/app/data
    depends_on:
      elasticsearch:
        condition: service_healthy
      ollama:
        condition: service_started
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8501/_stcore/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
      
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:3000/api/health | grep '\"database\": \"ok\"' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s


volumes:
  elasticsearch_data:
  ollama_data:
  postgres_data:
  grafana_data:
